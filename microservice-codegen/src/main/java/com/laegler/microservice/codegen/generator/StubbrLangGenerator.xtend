///*
// * generated by Xtext 2.10.0
// */
//package com.laegler.microservice.codegen.generator
//
//import com.laegler.stubbr.lang.generator.repository.StubbrRegistry
//import com.laegler.stubbr.lang.genmodel.TemplateProvider
//import com.laegler.stubbr.lang.stubbrLang.Stubb
//import javax.inject.Inject
//import org.eclipse.emf.ecore.resource.Resource
//import org.eclipse.xtext.generator.IFileSystemAccess2
//import org.eclipse.xtext.generator.IGenerator2
//import org.eclipse.xtext.generator.IGeneratorContext
//import com.laegler.stubbr.lang.genmodel.Project
//import java.util.ArrayList
//import microserviceModel.Architecture
//
///**
// * Generates code from your model files on save.
// * 
// * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
// */
//class StubbrLangGenerator {
//
//	@Inject ParentProjectGenerator parentProject
//	@Inject com.laegler.stubbr.lang.generator.CommonProjectGenerator commonProject
//	@Inject com.laegler.stubbr.lang.generator.ModelProjectGenerator modelProject
//	@Inject com.laegler.stubbr.lang.generator.PersistenceProjectGenerator persistenceProject
//	@Inject com.laegler.stubbr.lang.generator.BusinessProjectGenerator businessProject
//	@Inject com.laegler.stubbr.lang.generator.FacesProjectGenerator facesProject
//	@Inject com.laegler.stubbr.lang.generator.SwaggerProjectGenerator swaggerProject
//	@Inject com.laegler.stubbr.lang.generator.SoapServerProjectGenerator soapServerProject
//	@Inject com.laegler.stubbr.lang.generator.SoapClientProjectGenerator soapClientProject
//	@Inject com.laegler.stubbr.lang.generator.EarProjectGenerator earProject
//
//	@Inject TemplateProvider templateProvider
//
//	def void doGenerate(Resource architecture) {
//		val model. = architecture.contents.head as Architecture
//
//		stubbr.projects = new ArrayList<Project>
//		model. = stubb
//
//		// Single generator projects
//		stubbr?.projects?.addAll(#[
//			parentProject.prepare,
//			commonProject.prepare,
//			modelProject.prepare,
//			persistenceProject.prepare,
//			businessProject.prepare,
//			facesProject.prepare,
//			soapServerProject.prepare,
//			soapClientProject.prepare,
//			earProject.prepare
//		])
//
//		stubbr?.projects?.addAll(swaggerProject.prepareMulti)
//
//		// Generate files (flush)
//		stubbr?.projects?.forEach [ project |
//			project?.files?.forEach [ template |
//				templateProvider.generateFile(template)
//			]
//		]
//
//	// Tasks after Generation
//	// doPushToRemote
//	}
//
//	override beforeGenerate(Resource input, IFileSystemAccess2 fsa, IGeneratorContext context) {}
//
//	override afterGenerate(Resource input, IFileSystemAccess2 fsa, IGeneratorContext context) {}
//
//}
