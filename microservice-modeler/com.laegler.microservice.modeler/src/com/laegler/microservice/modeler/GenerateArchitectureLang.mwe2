module com.laegler.microservice.modeler.GenerateArchitectureLang

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {
//	bean = 
//bean = org.eclipse.emf.mwe.utils.StandaloneSetup {
//        scanClassPath = true
//        platformUri = rootPath
//    }
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "com.laegler.microservice.modeler"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				ideaPlugin = {
					enabled = true
				}
				web = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
//			registerGeneratedEPackage = "org.eclipse.xtext.xbase.XbasePackage"
//            registerGenModelFile = "platform:/resource/org.eclipse.xtext.xbase/model/Xbase.genmodel"
//	   registerGeneratedEPackage = "simulator.ICD.ICDPackage"
//	   registerGenModelFile = "platform:/resource/org.sengs.simulator/model/simulator.genmodel"
			name = "com.laegler.microservice.modeler.ArchitectureLang"
			fileExtensions = "architecture"
			
			referencedResource = "platform:/resource/com.laegler.microservice.modeler/model/MicroserviceModel.genmodel"
			
			fragment = ecore2xtext.Ecore2XtextValueConverterServiceFragment2 auto-inject {}
//			fragment = adapter.FragmentAdapter {}
//fragment = ecore2xtext.FormatterFragment {}
//			referencedResource = "platform:/resource/microservice/microservice-model/model/MicroserviceModel.ecore"
//			referencedResource = "http://www.laegler.com/microservice/model/MicroserviceModel"
//			referencedResource = "platform:/resource/com.laegler.microservice.model/model/MicroserviceModel.genmodel"
//fragment = org.eclipse.xtext.generator.adapter.FragmentAdapter {}
//				fragment = org.eclipse.xtext.generator.ecore2xtext.FormatterFragment {}
			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
		}
	}
}
