grammar com.laegler.microservice.modeler.ArchitectureLang with org.eclipse.xtext.common.Terminals
//grammar com.laegler.microservice.modeler.ArchitectureLang with org.eclipse.xtext.xbase.Xbase

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.eclipse.org/xtext/common/JavaVMTypes" as javaType

//import "http://www.laegler.com/microservice/model/MicroserviceModel" as m
import "platform:/resource/com.laegler.microservice.modeler/model/MicroserviceModel.ecore"
//"platform:/resource/com.laegler.microservice.modeler/model/MicroserviceModel.genmodel"

//import "platform:/resource/microservice/microservice-model/model/MicroserviceModel.ecore"

//generate architectureLang "http://www.laegler.com/microservice/model/MicroserviceModel"

Architecture returns Architecture:
	{Architecture}
//	'architecture' name=FQN (
		artifacts+=Artifact*
//	)?
	;
Artifact returns Artifact:
	Spring | Jar | GrpcJar | Gateway | Option;

Spring returns Spring:
	{Spring}
	type=SpringType name=FQN ('{'
		(description=STRING)?
		(exposes+=Expose)*
		(consumes+=Consume)*
		(dependencies+=Dependency)*
		(model=EntityModel)?
	'}')?;

Gateway returns Gateway:
	{Gateway}
	'gateway' name=FQN ('{'
		(description=STRING)? 
		( routes+=Route)*
	'}')?;

Route returns Route:
	{Route}
	'route' name=FQN ('{'
		urlmatcher=STRING
		('to' targetService=[Spring|FQN])?
	'}')?;
GrpcJar returns GrpcJar:
	{GrpcJar}
	'grpcJar' name=FQN ('{'
		(description=STRING)?
		('protoInline' protoInline=ProtoModel)?
		('protoFile' protoFile=STRING)
	'}')?;
Jar returns Jar:
	{Jar}
	'jar' name=FQN ('{'
		(description=STRING)?
	'}')?;
Option returns Option:
	{Option}
	'option' name=FQN (
		('=' value=(FQN|STRING))
		| (flag=BOOLEAN)
	);
Expose returns Expose:
	RestExpose | GrpcExpose;
RestExpose returns RestExpose:
	{RestExpose}
	'rest' name=FQN ('{'
		(description=STRING)?
		(draft?='draft')?
		('port' port=INT)?
		('endpoint' endpoint=STRING)?
		('swaggerFile' swaggerFile=STRING)?
	'}')?;
GrpcExpose returns GrpcExpose:
	{GrpcExpose}
	'grpc' name=FQN ('{'
		(draft?='draft')?
		(description=STRING)?
		('port' port=INT)?
		('jar' port=INT)?
		('protoInline' protoInline=ProtoModel)?
		('protoFile' protoFile=STRING)?
	'}')?;
ProtoModel:
	'TODO';
Consume returns Consume:
	RestConsume | GrpcConsume;
RestConsume returns RestConsume:
	{RestConsume}
	'consumeRest' target=[RestExpose|FQN] (description=STRING)?;
GrpcConsume returns GrpcConsume:
	{GrpcConsume}
	'consumeGrpc' target=[GrpcExpose|FQN] (description=STRING)?;
Dependency returns Dependency:
	{Dependency}
	'dependency' ('name' name=FQN)? ('jar' target=[Jar|FQN])?;
enum SpringType returns SpringType:
	DAEMON='daemon {' |
	SERVICE='service {';
	
EntityModel returns EntityModel:
	{EntityModel}
	'model'
	entities+=Entity*
	enumerations+=Enumeration*
	relationships+=Relationship*;

Entity returns Entity:
	{Entity}
	'entity' name=FQN
//	('extends' superType=JvmTypeReference)?
	'{'
		('label' label=STRING)?
		('documentation' documentation=STRING)?
		attributes+=Attribute*
	'}';

Enumeration returns Enumeration:
	{Enumeration}
	'enumeration' name=FQN '{'
		('label' label=STRING)?
		('documentation' documentation=STRING)?
		(enumValues+=ID (',' enumValues+=ID)*)?
	'}';

Attribute returns Attribute:
	{Attribute}
	'attribute' name=FQN '{'
		('label' label=STRING)?
		('documentation' documentation=STRING)?
		(primaryKey?='primaryKey')?
		(
			('type' type=[Entity|FQN])
//			('javaType' javaType=JvmTypeReference)
//			('javaType' javaType=[javaType::JvmType|FQN])
		)?
	'}';

Relationship returns Relationship:
	{Relationship}
	'relationship' name=FQN '{'
		('label' label=STRING)?
		('documentation' documentation=STRING)?
		'from' from=[Entity|FQN]
		'to' to=[Entity|FQN]
//		('action' action=XBlockExpression)?
//		('type' type=JvmTypeReference)?
	'}';

enum BaseTypeEnum returns BaseTypeEnum:
	STRING='String' |
	BOOLEAN='boolean' |
	LIST='List';

//terminal WS: ('  ' | '\t')+;
//terminal NEWLINE: ('\r'? '\n');
terminal BOOLEAN:
	'true'|'false';
terminal FQN: ID ('.' ID)*;
terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9')*;