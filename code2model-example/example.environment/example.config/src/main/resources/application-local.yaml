org:
  example:
    config:
      host: example.config
      port: 8888
    gateway:
      host: example.gateway
      port: 8080
    oauth2:
      host: example.oauth2
      port: 8081
    users:
      host: example.users
      port: 8091
      soapPort: 8091
      grcpPort: 7071
    mysql:
      host: example.mysql
      port: 3306
    redis:
      host: example.redis
      port: 6379
    elasticsearch:
      host: example.elasticsearch
      port: 9200
      transportPort: 9300
      product:
        indexName: usersindex
        indexType: User
security:
  sessions: if-required
  oauth2:
    client:
      clientId: tenant
      clientSecret: test
      access-token-validity-seconds: 30
      accessTokenUri: http://${org.example.oauth2.host}:${org.example.oauth2.port}/oauth/token
      userAuthorizationUri: http://${org.example.oauth2.host}:${org.example.oauth2.port}/oauth/authorize
      authorized-grant-types: authorization_code,refresh_token,password,implicit,client_credentials
      scope: guest,user,admin,read,write
#      tokenName: oauth_token
#      authenticationScheme: query
#      clientAuthenticationScheme: form
    resource:
      userInfoUri: https://${org.example.oauth2.host}:${org.example.oauth2.port}/oauth/dialog
      preferTokenInfo: false  
#      token-info-uri: https://${org.example.oauth2.host}:${org.example.oauth2.port}/oauth/user
logging:
  level:
    org.example: TRACE
    org.springframework: DEBUG
    org.hibernate: DEBUG
    io.grpc: WARN