version: '3'
services:
  product:
    image: product:1.0.0-SNAPSHOT
    container_name: product
    hostname: product
    command: java -Dspring.active.profiles=test -Dit.test.host=http://product:8080 -jar app.jar
    ports:
    - 8080:8080
    environment:
    - TEST_HOST="http://product:8080"
    links:
    - mysql
    - redis
    - elasticsearch
    - user
    networks:
    - microservice
  user:
    image: user:1.0.0-SNAPSHOT
    container_name: user
    hostname: user
    command: java -Dspring.active.profiles=test -Dit.test.host=http://user:8080 -jar app.jar
    ports:
    - 8080:8080
    environment:
    - TEST_HOST="http://user:8080"
    links:
    - mysql
    - redis
    - elasticsearch
    networks:
    - microservice
  mysql:
    image: mysql:0.0.1-SNAPSHOT
    container_name: mysql
    hostname: mysql
    ports:
    - 3306:3306
    networks:
    - microservice
  redis:
    image: redis:0.0.1-SNAPSHOT
    container_name: redis
    hostname: redis
    ports:
    - 6379:6379
    networks:
    - microservice
  elasticsearch:
    image: elasticsearch:0.0.1-SNAPSHOT
    container_name: elasticsearch
    hostname: elasticsearch
    ports:
    - 9200:9200
    - 9300:9300
    environment:
    - cluster.name=microservice-cluster
    - bootstrap.memory_lock=true
    - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
    - esdata:/usr/share/elasticsearch/data
    networks:
    - microservice
#  swagger-ui:
#    image: swaggerapi/swagger-ui:v3.0.17
#    container_name: swagger-ui
#    hostname: swagger-ui
#    ports:
#    - 8080:8080
#    networks:
#    - microservice
#  swagger-editor:
#    image: swaggerapi/swagger-editor:v3.0.13
#    container_name: swagger-editor
#    hostname: swagger-editor
#    ports:
#    - 8080:8080
#    networks:
#    - microservice
volumes:
  esdata:
    driver: local
networks:
  microservice: null