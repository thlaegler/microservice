/**
 * generated by Xtext 2.12.0
 */
package microserviceModel.impl;

import microserviceModel.MicroserviceModelPackage;
import microserviceModel.RestExpose;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Rest Expose</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link microserviceModel.impl.RestExposeImpl#getEndpoint <em>Endpoint</em>}</li>
 *   <li>{@link microserviceModel.impl.RestExposeImpl#getSwaggerFile <em>Swagger File</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RestExposeImpl extends ExposeImpl implements RestExpose {
	/**
	 * The default value of the '{@link #getEndpoint() <em>Endpoint</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getEndpoint()
	 * @generated
	 * @ordered
	 */
	protected static final String ENDPOINT_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getEndpoint() <em>Endpoint</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getEndpoint()
	 * @generated
	 * @ordered
	 */
	protected String endpoint = ENDPOINT_EDEFAULT;

	/**
	 * The default value of the '{@link #getSwaggerFile() <em>Swagger File</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getSwaggerFile()
	 * @generated
	 * @ordered
	 */
	protected static final String SWAGGER_FILE_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getSwaggerFile() <em>Swagger File</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getSwaggerFile()
	 * @generated
	 * @ordered
	 */
	protected String swaggerFile = SWAGGER_FILE_EDEFAULT;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RestExposeImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return MicroserviceModelPackage.Literals.REST_EXPOSE;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getEndpoint() {
		return endpoint;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setEndpoint(String newEndpoint) {
		String oldEndpoint = endpoint;
		endpoint = newEndpoint;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, MicroserviceModelPackage.REST_EXPOSE__ENDPOINT, oldEndpoint, endpoint));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getSwaggerFile() {
		return swaggerFile;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setSwaggerFile(String newSwaggerFile) {
		String oldSwaggerFile = swaggerFile;
		swaggerFile = newSwaggerFile;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, MicroserviceModelPackage.REST_EXPOSE__SWAGGER_FILE, oldSwaggerFile, swaggerFile));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case MicroserviceModelPackage.REST_EXPOSE__ENDPOINT:
				return getEndpoint();
			case MicroserviceModelPackage.REST_EXPOSE__SWAGGER_FILE:
				return getSwaggerFile();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case MicroserviceModelPackage.REST_EXPOSE__ENDPOINT:
				setEndpoint((String)newValue);
				return;
			case MicroserviceModelPackage.REST_EXPOSE__SWAGGER_FILE:
				setSwaggerFile((String)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case MicroserviceModelPackage.REST_EXPOSE__ENDPOINT:
				setEndpoint(ENDPOINT_EDEFAULT);
				return;
			case MicroserviceModelPackage.REST_EXPOSE__SWAGGER_FILE:
				setSwaggerFile(SWAGGER_FILE_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case MicroserviceModelPackage.REST_EXPOSE__ENDPOINT:
				return ENDPOINT_EDEFAULT == null ? endpoint != null : !ENDPOINT_EDEFAULT.equals(endpoint);
			case MicroserviceModelPackage.REST_EXPOSE__SWAGGER_FILE:
				return SWAGGER_FILE_EDEFAULT == null ? swaggerFile != null : !SWAGGER_FILE_EDEFAULT.equals(swaggerFile);
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (endpoint: ");
		result.append(endpoint);
		result.append(", swaggerFile: ");
		result.append(swaggerFile);
		result.append(')');
		return result.toString();
	}

} //RestExposeImpl
